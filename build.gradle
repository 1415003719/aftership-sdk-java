buildscript {
    ext {
        jvmVersion = '1.8'
        junitPlatformVersion = '1.6.2'
        junitEngineVersion = '5.6.2'
        okhttpVersion = '4.6.0'
        gsonVersion = '2.8.6'

        lombokVersion = '1.18.10'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
    }
}

allprojects {
    group 'com.aftership'
    version '2.0.3'

    repositories {
        mavenCentral()
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        sourceCompatibility = jvmVersion
        targetCompatibility = jvmVersion
    }
}

subprojects {
    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'checkstyle'

    checkstyle {
        toolVersion = "8.8"
        ignoreFailures = false
        showViolations = true

        configFile = file("${project.rootDir}/checkstyle.xml")
    }

    dependencies {
        testCompile "org.junit.platform:junit-platform-launcher:${junitPlatformVersion}"
        testCompile "org.junit.jupiter:junit-jupiter-engine:${junitEngineVersion}"
        testCompile "org.junit.vintage:junit-vintage-engine:${junitEngineVersion}"

        testImplementation "com.squareup.okhttp3:mockwebserver:${okhttpVersion}"

        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
        compileOnly "org.projectlombok:lombok:${lombokVersion}"
        testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
        testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    }
}

project(':aftership-sdk') {
    apply from: rootDir.canonicalPath + '/.gradle/publish.gradle'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'

    dependencies {
        implementation "com.squareup.okhttp3:okhttp:${okhttpVersion}"
        implementation "com.google.code.gson:gson:${gsonVersion}"
    }

    jar {
        archivesBaseName = "aftership-sdk"
    }

    task sourcesJar(type: Jar) {
        from sourceSets.main.allJava
        classifier = 'sources'
    }

    task javadocJar(type: Jar) {
        from javadoc
        classifier = 'javadoc'
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                groupId = 'com.github.chenjunbiao'
                artifactId = 'aftership-sdk'
                version = project.version

                from components.java
                artifact sourcesJar
                artifact javadocJar
                pom {
                    name = 'aftership-sdk'
                    description = 'aftership-sdk library'
                    url = 'https://docs.aftership.com/api/4/overview'
                    licenses {
                        license {
                            name = 'MIT License'
                            url = 'https://opensource.org/licenses/MIT'
                        }
                    }
                    developers {
                        developer {
                            name = 'chenjunbiao'
                            email = 'chenjunbiao@gmail.com'
                        }
                    }
                    scm {
                        url = 'https://github.com/chenjunbiao/aftership-sdk-java'
                        connection = 'scm:git:git@github.com:chenjunbiao/aftership-sdk-java.git'
                        developerConnection = 'scm:git:ssh://git@github.com:chenjunbiao/aftership-sdk-java.git'
                    }
                }
            }
        }

        repositories {
            maven {
                url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
                credentials {
                    username sonatypeUsername
                    password sonatypePassword
                }
            }
        }
    }

    signing {
        sign publishing.publications.mavenJava
    }

    javadoc {
        options.encoding = "UTF-8"
    }
}

project(':aftership-sample'){
    dependencies {
        //compile project(':aftership-sdk')
        implementation "com.github.chenjunbiao:aftership-sdk:2.0.3"
    }

    jar {
        archivesBaseName = "aftership-sample"
    }
}


